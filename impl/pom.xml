<?xml version="1.0" encoding="UTF-8"?>
<!-- vi: set et smarttab sw=4 tabstop=4: -->
<!--
Copyright © 2017 ZhangMaoLin and others. All rights reserved.

This program and the accompanying materials are made available under the
terms of the Eclipse Public License v1.0 which accompanies this distribution,
and is available at http://www.eclipse.org/legal/epl-v10.html
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.opendaylight.controller</groupId>
    <artifactId>config-parent</artifactId>
    <version>0.6.2-Carbon</version>
    <relativePath/>
  </parent>

  <groupId>com.catt.carbon</groupId>
  <artifactId>demo-impl</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <!-- <name> formatting is used by autorelease to parse and notify projects on
       build failure. Please do not modify this unless you have a good reason. -->
  <name>ODL :: com.catt.carbon :: ${project.artifactId}</name>
  <packaging>bundle</packaging>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>demo-api</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Testing Dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <!--Maven dependency is not OSGi-ready-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>1.2.47</version>
    </dependency>
    <!--
    This inspection reports any Maven dependency inside an OSGi project which points to a library which can not be run inside an OSGi container.
    Osmorc will try and bundlify these libraries,
    however using a library that natively supports OSGi will generally provide a better result and is therefore the preferred choice.
    -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.16.22</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

 <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <!--<version>2.4.0</version>-->
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <!--<Bundle-Version>${project.version}</Bundle-Version>-->
            <!--<Export-Package>
              com.catt.carbon.impl
            </Export-Package>-->
            <Import-Package>
              <!--org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.demo.rev150105-->
              <!--添加resolution:=optional的原因是，如果导入第三方jar包，打包的时候-->
              <!--会把所有的引用都写入manifest.mf文件中，会导致传递依赖的问题-->
              <!--这里有两种解决方法，第一种就是这么写-->
              <!--还有一种就是手动取消掉依赖的导入，但是这样会很复杂-->
              *;resolution:=optional
            </Import-Package>
            <Include-Resource>
              {maven-resources},-target/classes/LICENSE,META-INF/git.properties=-target/classes/META-INF/git.properties
            </Include-Resource>
            <!--<Bundle-Activator>

            </Bundle-Activator>-->
            <!--导入第三方依赖，依赖范围为compile，直接内联引用-->
            <Embed-Dependency>fastjson;scope=compile;inline = true</Embed-Dependency>
            <!--指定第三方jar打包的位置，内联引用下，该参数无效-->
            <Embed-Directory>target/dependency</Embed-Directory>
            <!--依赖传递检查-->
            <Embed-Transitive>true</Embed-Transitive>
            <Embed-StripGroup>true</Embed-StripGroup>
          </instructions>
        </configuration>
      </plugin>

      <!--https://stackoverflow.com/questions/46839574/opendaylight-how-to-include-a-library-jar-file-->
      <!--将第三方jar包打入进来，因为osgi项目使用第三方jar包，需要jar包中manifest.mf定义好Import和Export-->
      <!--<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <appendAssemblyId>false</appendAssemblyId>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>-->
    </plugins>
  </build>
</project>
